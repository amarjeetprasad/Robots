{"version":3,"sources":["components/Card/Card.js","components/robots.js","components/CardList/CardList.js","components/search.js","components/Scroll.js","App.js","index.js"],"names":["Card","Robot","id","name","email","className","src","alt","robots","username","CardList","searchField","roboList","Robots","filter","robot","toLowerCase","includes","map","key","length","style","color","display","flexWrap","Search","onSearchChange","type","placeholder","onChange","Scroll","props","overflowY","border","height","children","App","useState","setSearchField","e","target","value","ReactDOM","render","document","getElementById"],"mappings":"iQAceA,G,YAZF,SAAC,GAAa,IAAZC,EAAW,EAAXA,MACJC,EAAiBD,EAAjBC,GAAGC,EAAcF,EAAdE,KAAKC,EAASH,EAATG,MACjB,OACF,yBAAKC,UAAU,mBACP,yBAAKC,IAAG,+BAA0BJ,GAAMK,IAAI,UACxC,4BAAKJ,GACL,2BAAIC,MC2dDI,EAneC,CACd,CACEN,GAAI,EACJC,KAAM,gBACNM,SAAU,OACVL,MAAO,qBAET,CACEF,GAAI,EACJC,KAAM,eACNM,SAAU,YACVL,MAAO,qBAET,CACEF,GAAI,EACJC,KAAM,mBACNM,SAAU,WACVL,MAAO,sBAET,CACEF,GAAI,EACJC,KAAM,mBACNM,SAAU,WACVL,MAAO,6BAET,CACEF,GAAI,EACJC,KAAM,mBACNM,SAAU,SACVL,MAAO,4BAET,CACEF,GAAI,EACJC,KAAM,uBACNM,SAAU,mBACVL,MAAO,2BAET,CACEF,GAAI,EACJC,KAAM,kBACNM,SAAU,eACVL,MAAO,0BAET,CACEF,GAAI,EACJC,KAAM,2BACNM,SAAU,gBACVL,MAAO,wBAET,CACEF,GAAI,EACJC,KAAM,kBACNM,SAAU,WACVL,MAAO,2BAET,CACEF,GAAI,GACJC,KAAM,qBACNM,SAAU,iBACVL,MAAO,0BAET,CACEF,GAAI,GACJC,KAAM,gBACNM,SAAU,OACVL,MAAO,qBAET,CACEF,GAAI,GACJC,KAAM,eACNM,SAAU,YACVL,MAAO,qBAET,CACEF,GAAI,GACJC,KAAM,mBACNM,SAAU,WACVL,MAAO,sBAET,CACEF,GAAI,GACJC,KAAM,mBACNM,SAAU,WACVL,MAAO,6BAET,CACEF,GAAI,GACJC,KAAM,mBACNM,SAAU,SACVL,MAAO,4BAET,CACEF,GAAI,GACJC,KAAM,uBACNM,SAAU,mBACVL,MAAO,2BAET,CACEF,GAAI,GACJC,KAAM,kBACNM,SAAU,eACVL,MAAO,0BAET,CACEF,GAAI,GACJC,KAAM,2BACNM,SAAU,gBACVL,MAAO,wBAET,CACEF,GAAI,GACJC,KAAM,kBACNM,SAAU,WACVL,MAAO,2BAET,CACEF,GAAI,GACJC,KAAM,qBACNM,SAAU,iBACVL,MAAO,0BAET,CACEF,GAAI,GACJC,KAAM,gBACNM,SAAU,OACVL,MAAO,qBAET,CACEF,GAAI,GACJC,KAAM,eACNM,SAAU,YACVL,MAAO,qBAET,CACEF,GAAI,GACJC,KAAM,mBACNM,SAAU,WACVL,MAAO,sBAET,CACEF,GAAI,GACJC,KAAM,mBACNM,SAAU,WACVL,MAAO,6BAET,CACEF,GAAI,GACJC,KAAM,mBACNM,SAAU,SACVL,MAAO,4BAET,CACEF,GAAI,GACJC,KAAM,uBACNM,SAAU,mBACVL,MAAO,2BAET,CACEF,GAAI,GACJC,KAAM,kBACNM,SAAU,eACVL,MAAO,0BAET,CACEF,GAAI,GACJC,KAAM,2BACNM,SAAU,gBACVL,MAAO,wBAET,CACEF,GAAI,GACJC,KAAM,kBACNM,SAAU,WACVL,MAAO,2BAET,CACEF,GAAI,GACJC,KAAM,qBACNM,SAAU,iBACVL,MAAO,0BAET,CACEF,GAAI,GACJC,KAAM,gBACNM,SAAU,OACVL,MAAO,qBAET,CACEF,GAAI,GACJC,KAAM,eACNM,SAAU,YACVL,MAAO,qBAET,CACEF,GAAI,GACJC,KAAM,mBACNM,SAAU,WACVL,MAAO,sBAET,CACEF,GAAI,GACJC,KAAM,mBACNM,SAAU,WACVL,MAAO,6BAET,CACEF,GAAI,GACJC,KAAM,mBACNM,SAAU,SACVL,MAAO,4BAET,CACEF,GAAI,GACJC,KAAM,uBACNM,SAAU,mBACVL,MAAO,2BAET,CACEF,GAAI,GACJC,KAAM,kBACNM,SAAU,eACVL,MAAO,0BAET,CACEF,GAAI,GACJC,KAAM,2BACNM,SAAU,gBACVL,MAAO,wBAET,CACEF,GAAI,GACJC,KAAM,kBACNM,SAAU,WACVL,MAAO,2BAET,CACEF,GAAI,GACJC,KAAM,qBACNM,SAAU,iBACVL,MAAO,0BAET,CACEF,GAAI,GACJC,KAAM,gBACNM,SAAU,OACVL,MAAO,qBAET,CACEF,GAAI,GACJC,KAAM,eACNM,SAAU,YACVL,MAAO,qBAET,CACEF,GAAI,GACJC,KAAM,mBACNM,SAAU,WACVL,MAAO,sBAET,CACEF,GAAI,GACJC,KAAM,mBACNM,SAAU,WACVL,MAAO,6BAET,CACEF,GAAI,GACJC,KAAM,mBACNM,SAAU,SACVL,MAAO,4BAET,CACEF,GAAI,GACJC,KAAM,uBACNM,SAAU,mBACVL,MAAO,2BAET,CACEF,GAAI,GACJC,KAAM,kBACNM,SAAU,eACVL,MAAO,0BAET,CACEF,GAAI,GACJC,KAAM,2BACNM,SAAU,gBACVL,MAAO,wBAET,CACEF,GAAI,GACJC,KAAM,kBACNM,SAAU,WACVL,MAAO,2BAET,CACEF,GAAI,GACJC,KAAM,qBACNM,SAAU,iBACVL,MAAO,0BAET,CACEF,GAAI,GACJC,KAAM,gBACNM,SAAU,OACVL,MAAO,qBAET,CACEF,GAAI,GACJC,KAAM,eACNM,SAAU,YACVL,MAAO,qBAET,CACEF,GAAI,GACJC,KAAM,mBACNM,SAAU,WACVL,MAAO,sBAET,CACEF,GAAI,GACJC,KAAM,mBACNM,SAAU,WACVL,MAAO,6BAET,CACEF,GAAI,GACJC,KAAM,mBACNM,SAAU,SACVL,MAAO,4BAET,CACEF,GAAI,GACJC,KAAM,uBACNM,SAAU,mBACVL,MAAO,2BAET,CACEF,GAAI,GACJC,KAAM,kBACNM,SAAU,eACVL,MAAO,0BAET,CACEF,GAAI,GACJC,KAAM,2BACNM,SAAU,gBACVL,MAAO,wBAET,CACEF,GAAI,GACJC,KAAM,kBACNM,SAAU,WACVL,MAAO,2BAET,CACEF,GAAI,GACJC,KAAM,qBACNM,SAAU,iBACVL,MAAO,0BAET,CACEF,GAAI,GACJC,KAAM,gBACNM,SAAU,OACVL,MAAO,qBAET,CACEF,GAAI,GACJC,KAAM,eACNM,SAAU,YACVL,MAAO,qBAET,CACEF,GAAI,GACJC,KAAM,mBACNM,SAAU,WACVL,MAAO,sBAET,CACEF,GAAI,GACJC,KAAM,mBACNM,SAAU,WACVL,MAAO,6BAET,CACEF,GAAI,GACJC,KAAM,mBACNM,SAAU,SACVL,MAAO,4BAET,CACEF,GAAI,GACJC,KAAM,uBACNM,SAAU,mBACVL,MAAO,2BAET,CACEF,GAAI,GACJC,KAAM,kBACNM,SAAU,eACVL,MAAO,0BAET,CACEF,GAAI,GACJC,KAAM,2BACNM,SAAU,gBACVL,MAAO,wBAET,CACEF,GAAI,GACJC,KAAM,kBACNM,SAAU,WACVL,MAAO,2BAET,CACEF,GAAI,GACJC,KAAM,qBACNM,SAAU,iBACVL,MAAO,0BAET,CACEF,GAAI,GACJC,KAAM,gBACNM,SAAU,OACVL,MAAO,qBAET,CACEF,GAAI,GACJC,KAAM,eACNM,SAAU,YACVL,MAAO,qBAET,CACEF,GAAI,GACJC,KAAM,mBACNM,SAAU,WACVL,MAAO,sBAET,CACEF,GAAI,GACJC,KAAM,mBACNM,SAAU,WACVL,MAAO,6BAET,CACEF,GAAI,GACJC,KAAM,mBACNM,SAAU,SACVL,MAAO,4BAET,CACEF,GAAI,GACJC,KAAM,uBACNM,SAAU,mBACVL,MAAO,2BAET,CACEF,GAAI,GACJC,KAAM,kBACNM,SAAU,eACVL,MAAO,0BAET,CACEF,GAAI,GACJC,KAAM,2BACNM,SAAU,gBACVL,MAAO,wBAET,CACEF,GAAI,GACJC,KAAM,kBACNM,SAAU,WACVL,MAAO,2BAET,CACEF,GAAI,GACJC,KAAM,qBACNM,SAAU,iBACVL,MAAO,2BC1bIM,EAhCK,SAAC,GAAmB,IAAlBC,EAAiB,EAAjBA,YAcdC,EAJeC,EAAOC,QAAO,SAACC,GAClC,OAAOA,EAAMZ,KAAKa,cAAcC,SAASN,EAAYK,kBAGzBE,KAAI,SAACH,GACjC,OAAQ,kBAAC,EAAD,CAAMd,MAAOc,EAAOI,IAAKJ,EAAMb,QAGzC,OAAmB,IAAhBW,EAAOO,OACF,wBAAIC,MAAO,CAACC,MAAM,SAAlB,gBAIF,yBAAKD,MAAO,CAACE,QAAQ,OAAOC,SAAS,SAE/BZ,ICTCa,EAdA,SAAC,GAAsB,IAArBC,EAAoB,EAApBA,eACf,OACE,yBAAKrB,UAAU,OACX,2BACAA,UAAU,mCACTsB,KAAK,SAASC,YAAY,iBAC3BC,SAAUH,MCXH,SAASI,EAAOC,GAC3B,OACI,yBAAKV,MAAO,CAACW,UAAU,SAASC,OAAO,kBAAkBC,OAAO,UAExDH,EAAMI,UCoBPC,MArBf,WAAgB,IAAD,EAC2BC,mBAAS,IADpC,mBACJ1B,EADI,KACS2B,EADT,KAMb,OACE,yBAAKjC,UAAU,gBACX,yBAAKA,UAAU,UACb,yBAAKC,IAAI,6EAA6EC,IAAI,YAAY0B,OAAO,MAC7G,kBAAC,EAAD,CAAQP,eARd,SAAwBa,GAEtBD,EAAeC,EAAEC,OAAOC,WAQtB,6BACA,kBAACX,EAAD,KACE,kBAAC,EAAD,CAAUnB,YAAaA,O,MCbjC+B,IAASC,OACL,kBAAC,EAAD,MACFC,SAASC,eAAe,W","file":"static/js/main.0e4bd69b.chunk.js","sourcesContent":["import React from 'react'\r\nimport \"./Card.css\";\r\nconst Card = ({Robot}) => {\r\n    const {id,name,email} = Robot;\r\n  return(\r\n<div className=\"container grow \">\r\n        <img src={`https://robohash.org/${id}`} alt=\"robot\"/>\r\n            <h2>{name}</h2>\r\n            <p>{email}</p>\r\n</div>\r\n   )\r\n\r\n }\r\n\r\nexport default Card;"," const robots = [\r\n  {\r\n    id: 1,\r\n    name: 'Leanne Graham',\r\n    username: 'Bret',\r\n    email: 'Sincere@april.biz'\r\n  },\r\n  {\r\n    id: 2,\r\n    name: 'Ervin Howell',\r\n    username: 'Antonette',\r\n    email: 'Shanna@melissa.tv'\r\n  },\r\n  {\r\n    id: 3,\r\n    name: 'Clementine Bauch',\r\n    username: 'Samantha',\r\n    email: 'Nathan@yesenia.net'\r\n  },\r\n  {\r\n    id: 4,\r\n    name: 'Patricia Lebsack',\r\n    username: 'Karianne',\r\n    email: 'Julianne.OConner@kory.org'\r\n  },\r\n  {\r\n    id: 5,\r\n    name: 'Chelsey Dietrich',\r\n    username: 'Kamren',\r\n    email: 'Lucio_Hettinger@annie.ca'\r\n  },\r\n  {\r\n    id: 6,\r\n    name: 'Mrs. Dennis Schulist',\r\n    username: 'Leopoldo_Corkery',\r\n    email: 'Karley_Dach@jasper.info'\r\n  },\r\n  {\r\n    id: 7,\r\n    name: 'Kurtis Weissnat',\r\n    username: 'Elwyn.Skiles',\r\n    email: 'Telly.Hoeger@billy.biz'\r\n  },\r\n  {\r\n    id: 8,\r\n    name: 'Nicholas Runolfsdottir V',\r\n    username: 'Maxime_Nienow',\r\n    email: 'Sherwood@rosamond.me'\r\n  },\r\n  {\r\n    id: 9,\r\n    name: 'Glenna Reichert',\r\n    username: 'Delphine',\r\n    email: 'Chaim_McDermott@dana.io'\r\n  },\r\n  {\r\n    id: 10,\r\n    name: 'Clementina DuBuque',\r\n    username: 'Moriah.Stanton',\r\n    email: 'Rey.Padberg@karina.biz'\r\n  },\r\n  {\r\n    id: 11,\r\n    name: 'Leanne Graham',\r\n    username: 'Bret',\r\n    email: 'Sincere@april.biz'\r\n  },\r\n  {\r\n    id: 12,\r\n    name: 'Ervin Howell',\r\n    username: 'Antonette',\r\n    email: 'Shanna@melissa.tv'\r\n  },\r\n  {\r\n    id: 13,\r\n    name: 'Clementine Bauch',\r\n    username: 'Samantha',\r\n    email: 'Nathan@yesenia.net'\r\n  },\r\n  {\r\n    id: 14,\r\n    name: 'Patricia Lebsack',\r\n    username: 'Karianne',\r\n    email: 'Julianne.OConner@kory.org'\r\n  },\r\n  {\r\n    id: 15,\r\n    name: 'Chelsey Dietrich',\r\n    username: 'Kamren',\r\n    email: 'Lucio_Hettinger@annie.ca'\r\n  },\r\n  {\r\n    id: 16,\r\n    name: 'Mrs. Dennis Schulist',\r\n    username: 'Leopoldo_Corkery',\r\n    email: 'Karley_Dach@jasper.info'\r\n  },\r\n  {\r\n    id: 17,\r\n    name: 'Kurtis Weissnat',\r\n    username: 'Elwyn.Skiles',\r\n    email: 'Telly.Hoeger@billy.biz'\r\n  },\r\n  {\r\n    id: 18,\r\n    name: 'Nicholas Runolfsdottir V',\r\n    username: 'Maxime_Nienow',\r\n    email: 'Sherwood@rosamond.me'\r\n  },\r\n  {\r\n    id: 19,\r\n    name: 'Glenna Reichert',\r\n    username: 'Delphine',\r\n    email: 'Chaim_McDermott@dana.io'\r\n  },\r\n  {\r\n    id: 20,\r\n    name: 'Clementina DuBuque',\r\n    username: 'Moriah.Stanton',\r\n    email: 'Rey.Padberg@karina.biz'\r\n  },\r\n  {\r\n    id: 21,\r\n    name: 'Leanne Graham',\r\n    username: 'Bret',\r\n    email: 'Sincere@april.biz'\r\n  },\r\n  {\r\n    id: 22,\r\n    name: 'Ervin Howell',\r\n    username: 'Antonette',\r\n    email: 'Shanna@melissa.tv'\r\n  },\r\n  {\r\n    id: 23,\r\n    name: 'Clementine Bauch',\r\n    username: 'Samantha',\r\n    email: 'Nathan@yesenia.net'\r\n  },\r\n  {\r\n    id: 24,\r\n    name: 'Patricia Lebsack',\r\n    username: 'Karianne',\r\n    email: 'Julianne.OConner@kory.org'\r\n  },\r\n  {\r\n    id: 25,\r\n    name: 'Chelsey Dietrich',\r\n    username: 'Kamren',\r\n    email: 'Lucio_Hettinger@annie.ca'\r\n  },\r\n  {\r\n    id: 26,\r\n    name: 'Mrs. Dennis Schulist',\r\n    username: 'Leopoldo_Corkery',\r\n    email: 'Karley_Dach@jasper.info'\r\n  },\r\n  {\r\n    id: 27,\r\n    name: 'Kurtis Weissnat',\r\n    username: 'Elwyn.Skiles',\r\n    email: 'Telly.Hoeger@billy.biz'\r\n  },\r\n  {\r\n    id: 28,\r\n    name: 'Nicholas Runolfsdottir V',\r\n    username: 'Maxime_Nienow',\r\n    email: 'Sherwood@rosamond.me'\r\n  },\r\n  {\r\n    id: 29,\r\n    name: 'Glenna Reichert',\r\n    username: 'Delphine',\r\n    email: 'Chaim_McDermott@dana.io'\r\n  },\r\n  {\r\n    id: 30,\r\n    name: 'Clementina DuBuque',\r\n    username: 'Moriah.Stanton',\r\n    email: 'Rey.Padberg@karina.biz'\r\n  },\r\n  {\r\n    id: 31,\r\n    name: 'Leanne Graham',\r\n    username: 'Bret',\r\n    email: 'Sincere@april.biz'\r\n  },\r\n  {\r\n    id: 32,\r\n    name: 'Ervin Howell',\r\n    username: 'Antonette',\r\n    email: 'Shanna@melissa.tv'\r\n  },\r\n  {\r\n    id: 33,\r\n    name: 'Clementine Bauch',\r\n    username: 'Samantha',\r\n    email: 'Nathan@yesenia.net'\r\n  },\r\n  {\r\n    id: 34,\r\n    name: 'Patricia Lebsack',\r\n    username: 'Karianne',\r\n    email: 'Julianne.OConner@kory.org'\r\n  },\r\n  {\r\n    id: 35,\r\n    name: 'Chelsey Dietrich',\r\n    username: 'Kamren',\r\n    email: 'Lucio_Hettinger@annie.ca'\r\n  },\r\n  {\r\n    id: 36,\r\n    name: 'Mrs. Dennis Schulist',\r\n    username: 'Leopoldo_Corkery',\r\n    email: 'Karley_Dach@jasper.info'\r\n  },\r\n  {\r\n    id: 37,\r\n    name: 'Kurtis Weissnat',\r\n    username: 'Elwyn.Skiles',\r\n    email: 'Telly.Hoeger@billy.biz'\r\n  },\r\n  {\r\n    id: 38,\r\n    name: 'Nicholas Runolfsdottir V',\r\n    username: 'Maxime_Nienow',\r\n    email: 'Sherwood@rosamond.me'\r\n  },\r\n  {\r\n    id: 39,\r\n    name: 'Glenna Reichert',\r\n    username: 'Delphine',\r\n    email: 'Chaim_McDermott@dana.io'\r\n  },\r\n  {\r\n    id: 40,\r\n    name: 'Clementina DuBuque',\r\n    username: 'Moriah.Stanton',\r\n    email: 'Rey.Padberg@karina.biz'\r\n  },\r\n  {\r\n    id: 41,\r\n    name: 'Leanne Graham',\r\n    username: 'Bret',\r\n    email: 'Sincere@april.biz'\r\n  },\r\n  {\r\n    id: 42,\r\n    name: 'Ervin Howell',\r\n    username: 'Antonette',\r\n    email: 'Shanna@melissa.tv'\r\n  },\r\n  {\r\n    id: 43,\r\n    name: 'Clementine Bauch',\r\n    username: 'Samantha',\r\n    email: 'Nathan@yesenia.net'\r\n  },\r\n  {\r\n    id: 44,\r\n    name: 'Patricia Lebsack',\r\n    username: 'Karianne',\r\n    email: 'Julianne.OConner@kory.org'\r\n  },\r\n  {\r\n    id: 45,\r\n    name: 'Chelsey Dietrich',\r\n    username: 'Kamren',\r\n    email: 'Lucio_Hettinger@annie.ca'\r\n  },\r\n  {\r\n    id: 46,\r\n    name: 'Mrs. Dennis Schulist',\r\n    username: 'Leopoldo_Corkery',\r\n    email: 'Karley_Dach@jasper.info'\r\n  },\r\n  {\r\n    id: 47,\r\n    name: 'Kurtis Weissnat',\r\n    username: 'Elwyn.Skiles',\r\n    email: 'Telly.Hoeger@billy.biz'\r\n  },\r\n  {\r\n    id: 48,\r\n    name: 'Nicholas Runolfsdottir V',\r\n    username: 'Maxime_Nienow',\r\n    email: 'Sherwood@rosamond.me'\r\n  },\r\n  {\r\n    id: 49,\r\n    name: 'Glenna Reichert',\r\n    username: 'Delphine',\r\n    email: 'Chaim_McDermott@dana.io'\r\n  },\r\n  {\r\n    id: 50,\r\n    name: 'Clementina DuBuque',\r\n    username: 'Moriah.Stanton',\r\n    email: 'Rey.Padberg@karina.biz'\r\n  },\r\n  {\r\n    id: 51,\r\n    name: 'Leanne Graham',\r\n    username: 'Bret',\r\n    email: 'Sincere@april.biz'\r\n  },\r\n  {\r\n    id: 52,\r\n    name: 'Ervin Howell',\r\n    username: 'Antonette',\r\n    email: 'Shanna@melissa.tv'\r\n  },\r\n  {\r\n    id: 53,\r\n    name: 'Clementine Bauch',\r\n    username: 'Samantha',\r\n    email: 'Nathan@yesenia.net'\r\n  },\r\n  {\r\n    id: 54,\r\n    name: 'Patricia Lebsack',\r\n    username: 'Karianne',\r\n    email: 'Julianne.OConner@kory.org'\r\n  },\r\n  {\r\n    id: 55,\r\n    name: 'Chelsey Dietrich',\r\n    username: 'Kamren',\r\n    email: 'Lucio_Hettinger@annie.ca'\r\n  },\r\n  {\r\n    id: 56,\r\n    name: 'Mrs. Dennis Schulist',\r\n    username: 'Leopoldo_Corkery',\r\n    email: 'Karley_Dach@jasper.info'\r\n  },\r\n  {\r\n    id: 57,\r\n    name: 'Kurtis Weissnat',\r\n    username: 'Elwyn.Skiles',\r\n    email: 'Telly.Hoeger@billy.biz'\r\n  },\r\n  {\r\n    id: 58,\r\n    name: 'Nicholas Runolfsdottir V',\r\n    username: 'Maxime_Nienow',\r\n    email: 'Sherwood@rosamond.me'\r\n  },\r\n  {\r\n    id: 59,\r\n    name: 'Glenna Reichert',\r\n    username: 'Delphine',\r\n    email: 'Chaim_McDermott@dana.io'\r\n  },\r\n  {\r\n    id: 60,\r\n    name: 'Clementina DuBuque',\r\n    username: 'Moriah.Stanton',\r\n    email: 'Rey.Padberg@karina.biz'\r\n  },\r\n  {\r\n    id: 61,\r\n    name: 'Leanne Graham',\r\n    username: 'Bret',\r\n    email: 'Sincere@april.biz'\r\n  },\r\n  {\r\n    id: 62,\r\n    name: 'Ervin Howell',\r\n    username: 'Antonette',\r\n    email: 'Shanna@melissa.tv'\r\n  },\r\n  {\r\n    id: 63,\r\n    name: 'Clementine Bauch',\r\n    username: 'Samantha',\r\n    email: 'Nathan@yesenia.net'\r\n  },\r\n  {\r\n    id: 64,\r\n    name: 'Patricia Lebsack',\r\n    username: 'Karianne',\r\n    email: 'Julianne.OConner@kory.org'\r\n  },\r\n  {\r\n    id: 65,\r\n    name: 'Chelsey Dietrich',\r\n    username: 'Kamren',\r\n    email: 'Lucio_Hettinger@annie.ca'\r\n  },\r\n  {\r\n    id: 66,\r\n    name: 'Mrs. Dennis Schulist',\r\n    username: 'Leopoldo_Corkery',\r\n    email: 'Karley_Dach@jasper.info'\r\n  },\r\n  {\r\n    id: 67,\r\n    name: 'Kurtis Weissnat',\r\n    username: 'Elwyn.Skiles',\r\n    email: 'Telly.Hoeger@billy.biz'\r\n  },\r\n  {\r\n    id: 68,\r\n    name: 'Nicholas Runolfsdottir V',\r\n    username: 'Maxime_Nienow',\r\n    email: 'Sherwood@rosamond.me'\r\n  },\r\n  {\r\n    id: 69,\r\n    name: 'Glenna Reichert',\r\n    username: 'Delphine',\r\n    email: 'Chaim_McDermott@dana.io'\r\n  },\r\n  {\r\n    id: 70,\r\n    name: 'Clementina DuBuque',\r\n    username: 'Moriah.Stanton',\r\n    email: 'Rey.Padberg@karina.biz'\r\n  },\r\n  {\r\n    id: 71,\r\n    name: 'Leanne Graham',\r\n    username: 'Bret',\r\n    email: 'Sincere@april.biz'\r\n  },\r\n  {\r\n    id: 72,\r\n    name: 'Ervin Howell',\r\n    username: 'Antonette',\r\n    email: 'Shanna@melissa.tv'\r\n  },\r\n  {\r\n    id: 73,\r\n    name: 'Clementine Bauch',\r\n    username: 'Samantha',\r\n    email: 'Nathan@yesenia.net'\r\n  },\r\n  {\r\n    id: 74,\r\n    name: 'Patricia Lebsack',\r\n    username: 'Karianne',\r\n    email: 'Julianne.OConner@kory.org'\r\n  },\r\n  {\r\n    id: 75,\r\n    name: 'Chelsey Dietrich',\r\n    username: 'Kamren',\r\n    email: 'Lucio_Hettinger@annie.ca'\r\n  },\r\n  {\r\n    id: 76,\r\n    name: 'Mrs. Dennis Schulist',\r\n    username: 'Leopoldo_Corkery',\r\n    email: 'Karley_Dach@jasper.info'\r\n  },\r\n  {\r\n    id: 77,\r\n    name: 'Kurtis Weissnat',\r\n    username: 'Elwyn.Skiles',\r\n    email: 'Telly.Hoeger@billy.biz'\r\n  },\r\n  {\r\n    id: 78,\r\n    name: 'Nicholas Runolfsdottir V',\r\n    username: 'Maxime_Nienow',\r\n    email: 'Sherwood@rosamond.me'\r\n  },\r\n  {\r\n    id: 79,\r\n    name: 'Glenna Reichert',\r\n    username: 'Delphine',\r\n    email: 'Chaim_McDermott@dana.io'\r\n  },\r\n  {\r\n    id: 80,\r\n    name: 'Clementina DuBuque',\r\n    username: 'Moriah.Stanton',\r\n    email: 'Rey.Padberg@karina.biz'\r\n  }\r\n];\r\n\r\nexport default robots;","import React from 'react'\r\nimport Card from \"../Card/Card\";\r\nimport Robots from \"../robots\";\r\n\r\n\r\n const   CardList = ({searchField}) => {\r\n  // const [Robots, setRobots] = useState([]);\r\n\r\n  // useEffect(()=>{\r\n  //   fetch(\"https://jsonplaceholder.typicode.com/users\")\r\n  //   .then(res=>res.json())\r\n  //   .then(data=>setRobots(data))\r\n    \r\n  // })\r\n\r\n  const filteredRobots=Robots.filter((robot)=>{\r\n    return robot.name.toLowerCase().includes(searchField.toLowerCase());\r\n  })\r\n  \r\n  const roboList=filteredRobots.map((robot)=>{\r\n    return( <Card Robot={robot} key={robot.id}/> );\r\n  })\r\n\r\n  if(Robots.length===0)\r\n  {return <h1 style={{color:\"#fff\"}}>Loading.....</h1>}\r\n  else\r\n  {\r\n    return (\r\n        <div style={{display:\"flex\",flexWrap:\"wrap\"}}>\r\n            {\r\n              roboList\r\n             }\r\n        </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default CardList;","import React from 'react'\r\n\r\n/**\r\n* @author\r\n* @function Search\r\n**/\r\n\r\nconst Search = ({onSearchChange}) => {\r\n  return(\r\n    <div className=\"pa2\">\r\n        <input\r\n        className=\"pa3 ba b--green bg-lightest-blue\"\r\n         type=\"search\" placeholder=\"search robo...\"\r\n        onChange={onSearchChange}\r\n\r\n         />\r\n    </div>\r\n   )\r\n\r\n }\r\n\r\nexport default Search;","import React from 'react'\r\n\r\nexport default function Scroll(props) {\r\n    return (\r\n        <div style={{overflowY:\"scroll\",border:\"5px solid black\",height:\"500px\"}}>\r\n            {\r\n                props.children\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","import React,{useState} from 'react';\r\nimport './App.css';\r\nimport CardList from \"./components/CardList/CardList\";\r\nimport Search from \"./components/search\";\r\nimport Scroll from \"./components/Scroll\";\r\nfunction App() {\r\n    const [searchField, setSearchField] = useState(\"\");\r\n    function onSearchChange(e)\r\n    {\r\n      setSearchField(e.target.value);\r\n    }\r\n  return (\r\n    <div className=\"tc Container\">\r\n        <div className=\"header\">\r\n          <img src=\"https://fontmeme.com/permalink/200906/b1faf2feb858b16f78e1f8a75da3adf1.png\" alt=\"sega-font\" border=\"0\" />\r\n          <Search onSearchChange={onSearchChange}/>\r\n        </div>\r\n        <hr/>\r\n        <Scroll>\r\n          <CardList searchField={searchField}/>\r\n        </Scroll>\r\n        \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport \"tachyons\";\r\n\r\nReactDOM.render(\r\n    <App />,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}